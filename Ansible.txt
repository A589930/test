
ansible -m command -a "dmidecode" dev

this command will fail bcoz normal user doesn't have previlidges to run dmidecode comand

in sudoers file entry for vijay user is like 
vijay ALL=(ALL) NOPASSWD: ALL

ansible -m command -a "dmidecode" dev --become // now this command will run as vijay users previlidges are getting elevated to root user and bcoz of suoder's file entry it is not asking for password as well

===============
now if changing entry to 
vijay ALL=(ALL) PASSWD: ALL

and running below command

ansible -m command -a "dmidecode" dev --become

then also it will fail bcoz password is not specified

ansible -m command -a "dmidecode" dev --become -K 

now it will ask for password and will return output
=============

what is difference between command and shell

command is not suitable when we need shell variables associated with that shell
ansible -m command -a "set" dev -K
BECOME password: 
localhost | FAILED | rc=2 >>
[Errno 2] No such file or directory


for shell we are getting output
===============

how to do dry check for playbook

ansible-playbook ftp.yml -C


how to do step by step execution for playbook 

ansible-playbook --step ftp.yml


ansible-playbook --syntax-check ftp.yml

how to ignore errors in playbook
ignore_errors: yes 


how to run playbook only on one host from hosts file
cat hosts
localhost
172.110.1.2

ansible-playbook -i hosts ftp.yml --limit localhost

===========
ansible-playbook -i /opt/docker/hosts /opt/docker/simple-devops-image.yml;

========
---
- hosts: dev
  become: true
  vars:
   ftp: vsftpd
   firewall: firewalld
  tasks:
    - name: print uptime
      command: uptime
    - name: install packages
      yum:
       name:
       - "{{ ftp }}"
       - "{{ firewall }}"
	   
================
---
- hosts: dev
  become: true
  vars:
   src: "/etc/ansible/vij/"
   file: "/etc/ansible/vijay"
  tasks:
    - name: create directory
      file:
              state: directory
              path : "{{ src }}"
              recurse: yes
              owner: vij
              group: vij

    - name: copy file
      copy:
              src: "{{ file }}"
              dest: "{{ src }}"

================
host and group variables

cat hosts 
[server1]
demo1 ansible_user=vijay
demo2 ansible_user=ajay
[server2]
demo3
demo4
[servers:children]
server1
server2
[servers:var]
ansible_user=john
==============
ansible facts are variables that are autimatically discovered by ansible from managed hosts

========
conditionals in ansible

poweroff system when it is centos

- name: poweroff system
  command: poweroff
  when: ansible_os_family == "CentOS"
  
loops in ansibles

  
    - name: print loop
      debug :
              msg : "{{ item }}"
      with_items:
              - "hello1"
              - "hello2"


============================
copy:
- name: copy brooklyn.cfg into {{cfg_location}}
  template: dest=/etc/amp/brooklyn.cfg  src=brooklyn.cfg.j2 mode=0600  owner={{amp_user}}  group={{amp_user}}
  
file create:
- file: "path={{ssh}} state=directory"
  name: "Create-Directory {{ssh}}"

- file: "dest={{ssh}} owner=amp group=amp recurse=yes"   // set ownership
  name: "set owner of {{ssh}}  to  amp"
  
move
delete

service stop , start, restart:
- name: restart ldap
  service: name=slapd state=restarted
  
want to perform same thing with multiple items:
- action: "yum name={{ item }} state=present"
  name: "Installing Ldap"
  with_items: 
    - openldap-servers
    - openldap-clients
    - libselinux-python
	

If Else condition:
- name: "Check whether id_rsa exists"
  register: stat_result
  stat:
    path: /home/amp/.ssh/id_rsa

- file:
    path: /home/amp/.ssh/id_rsa
    state: absent
  name: "Delete id_rsa if it exist"
  when: "stat_result.stat.exists == True"
  
- name: set brooklyn.cfg path in osgilauncher    // replace in file
  lineinfile:
    dest: /etc/amp/org.apache.brooklyn.osgilauncher.cfg
    regexp: 'localBrooklynPropertiesFile='
    line: 'localBrooklynPropertiesFile=/etc/amp/brooklyn.cfg'

- replace: 
    dest: /etc/openldap/slapd.d/frontend.ldif
    regexp: <ldapadminpassword>
    replace: "{{ generated_ldap_admin_ps.stdout }}"
	
- name: extract latest  compose-amp_bp_packaging tar.gz inside the /opt directory  // extract
  unarchive:
    src: roles/amp4/files/compose-amp_bp_packaging-2017.04-Final.tar.gz
    dest: /opt/
	
- name: please wait,it might take 12  minutes to uploading yaml to catalog // wait for 12 minutes
  pause:
     minutes: 12
	 
- name: insert "kernel.random.read_wakeup_threshold = 2048" in /etc/sysctl.conf  // insert into file
  blockinfile:
    dest: /etc/sysctl.conf
    block: |
      kernel.random.read_wakeup_threshold = 2048
      kernel.random.write_wakeup_threshold = 3072
	  
	  
Ad hoc commands : 
Ansible abc -m file -a "dest = /path/user1/new mode = 777 owner = user1 group = user1 state = directory"
where , 
abc=hosts specified in /etc/ansible/hosts
m=module name
a= arguments

Ansible abc -m yum -a "name = demo-tomcat-1 state = latest" 

=========================VAULT================
ansible-vault encrypt  http.yml  // to set the password
ansible-valut view http.yml  // to view file content
ansible-valut edit http.yml  // to edit file
ansible-playbook  http.yml --ask-vault-pass  // to run script
ansible-vault decrypt http.yml   // to remove the password
