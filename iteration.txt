Customzed service creation , Troubleshoting issues by analyzing logs


awk , cut , file processing , sed ,
count no of lines in file : wc -l filename
count no of words in file : wc -w filename
file containg 100 lines print 30 to 40 number of lines : cat  filename | head -40 | tail -10
ls = echo *  // both are same
for displaying lines from 3 to 7 : sed -n '3,7p' filename
display entire file except lines from 3 to 7 : sed '3,7d' filename
string replacement :  sed 's/version/story/g' myfile.txt
string replacement by ignoring case : sed 's/version/story/gi' myfile.txt
replace multiple spaces with single space : sed 's/ */ /g' aa      // if 2 or more than 2 consecitive spaces are there then those will be repalced with single space
replacing words only within a line range (30 through 40) : sed '30,40 s/version/story/g' myfile.txt
^#  : lines starting with comment
^$   : blank lines   
insert 1 at the start of every line : sed -i 's/^/1/' filename
insert  at the last of every line :  sed -i 's/$/6/' filename
remove cntl+M character from file : sed -i 's/^M//g' filename
remove blank line : sed '/^$/d' file.txt
perform 2 or more substitution at once : sed -i 's/that/this/gi;s/line1/line2/gi' myfile.txt
cut -d" " -f 2 filename // for displaying 2nd column seperated by space
print lines starting with "vi"  :  awk '/^vi/{print}' filename
print lines endng with "kar:  awk '/kar$/{print}' filename    ( cat h | grep "re$")
print lines containing 0 to 9 numbers :  awk '/[0-9]/{print}' filename
mtime : ls -l : show the last update to file content, it does not udpate with change in permission or owner
atime : ls -lu : shows the last file accessed time 
ctime : ls -lc : it changes when u change the files ownership or access permission .
date -s "27 AUGUST 2018 15:44:00"  // set date 
set cron every 10 minutes : */10 * * * * command
at 11 Am nad 4 PM : 		00 11,16 * * * command 
from 9 AM to 6 PM : 		00 09-18 * * *
from 9 AM to 6 PM ( weekdays only)		: 00 09-18 * * 1-5
means every 2 minuts in first  10 minutes : 0-10/2 * * * *
@yearly  : 0 0 1 1 *
@daily   : 0 0 * * *
@hourly  : 0 * * * *
@reboot  runs at startup
write a shell script to monitor disk space usage :
{
df -hk | grep tmp > /tmp/vij/s
var=`cat /tmp/vij/s | awk '{ print $5 }'`
var1=`echo"${var::-1}"`
echo $var1
}  // this script is not completed still

remove blank line from file

[ram2@atrcxb2957 t]$ cat t  //create 50 users 
#!/bin/bash

for i in ` cat ./a`; do
useradd $i;
done
[ram2@atrcxb2957 t]$ cat tt  // set password for 50 users
#!/bin/bash

for i in `cat ./a` ; do
echo "ram" | passwd --stdin $i; done
====================================
// script to perform passwordless ssh from 1 linux server to another
#!/bin/bash
username=<username>
server=<Server_IP/Server_Hostname>

ssh-keygen -t rsa 
if [ $? -ne 0 ]; then 
echo "Could not generate the Key"
exit
fi

ash-copy-id  -i ~/.ssh/id_rsa.pub  $username@$server
if [ $? -ne 0 ]; then 
echo "Could not copy public id from client to server"
exit
fi
echo "Passwordless SSH configured successfully"

