
count no of lines in file : wc -l filename
count no of words in file : wc -w filename
file containg 100 lines print 30 to 40 number of lines : cat  filename | head -40 | tail -10
sed -n '30,40p' filename
ls = echo *  // both are same

display entire file except lines from 3 to 7 : sed '3,7d' filename
string replacement :  sed 's/version/story/g' myfile.txt
string replacement by ignoring case : sed 's/version/story/gi' myfile.txt
replace multiple spaces with single space : sed 's/ */ /g' aa      // if 2 or more than 2 consecitive spaces are there then those will be repalced with single space
replacing words only within a line range (30 through 40) : sed '30,40 s/version/story/g' myfile.txt
^#  : lines starting with comment
^$   : blank lines   

insert 1 at the start of every line : sed -i 's/^/1/' filename
insert  at the last of every line :  sed -i 's/$/6/' filename
remove cntl+M character from file : sed -i 's/^M//g' filename
remove blank line : sed '/^$/d' file.txt
perform 2 or more substitution at once : sed -i 's/that/this/gi;s/line1/line2/gi' myfile.txt

cut -d" " -f 2 filename // for displaying 2nd column seperated by space
print lines starting with "vi"  :  awk '/^vi/{print}' filename
print lines endng with "kar:  awk '/kar$/{print}' filename    ( cat h | grep "re$")
print lines containing 0 to 9 numbers :  awk '/[0-9]/{print}' filename

mtime : ls -l : show the last update to file content, it does not udpate with change in permission or owner
atime : ls -lu : shows the last file accessed time 
ctime : ls -lc : it changes when u change the files ownership or access permission .

date -s "27 AUGUST 2018 15:44:00"  // set date 
set cron every 10 minutes : */10 * * * * command
at 11 Am nad 4 PM : 		00 11,16 * * * command 
from 9 AM to 6 PM : 		00 09-18 * * *
from 9 AM to 6 PM ( weekdays only)		: 00 09-18 * * 1-5
means every 2 minuts in first  10 minutes : 0-10/2 * * * *
@yearly  : 0 0 1 1 *
@daily   : 0 0 * * *
@hourly  : 0 * * * *
@reboot  runs at startup

write a shell script to monitor disk space usage :
{
df -hk | grep tmp > /tmp/vij/s
var=`cat /tmp/vij/s | awk '{ print $5 }'`
var1=`echo"${var::-1}"`
echo $var1
}  // this script is not completed still

remove blank line from file
cat filename | grep -v "^$" > temp_file

[ram2@atrcxb2957 t]$ cat t  //create 50 users 
#!/bin/bash

for i in ` cat ./a`; do
useradd $i;
done

[ram2@atrcxb2957 t]$ cat tt  // set password for 50 users
#!/bin/bash

for i in `cat ./a` ; do
echo "ram" | passwd --stdin $i; done
====================================
// script to perform passwordless ssh from 1 linux server to another
#!/bin/bash
username=<username>
server=<Server_IP/Server_Hostname>

ssh-keygen -t rsa 
if [ $? -ne 0 ]; then 
echo "Could not generate the Key"
exit
fi

ssh-copy-id  -i ~/.ssh/id_rsa.pub  $username@$server
if [ $? -ne 0 ]; then 
echo "Could not copy public id from client to server"
exit
fi
echo "Passwordless SSH configured successfully"


=====================================

create a file with some content with the help of cat command.
cat > hello
enter the content followd by CTRL + D

[root@system1 ~]# date -u
Sat Mar 23 17:39:05 UTC 2019
[root@system1 ~]# date -s "Sat Mar 23 23:08:08"
Sat Mar 23 23:08:08 IST 2019
[root@system1 ~]#  date +"%T"
23:10:46
[root@system1 ~]# date +%B
March
[root@system1 ~]# date +%d
23
[root@system1 ~]# date +%D
03/23/19
[root@system1 ~]# date +%b
Mar
[root@system1 ~]# date +%y
19
[root@system1 ~]# date +%Y
2019
[root@system1 ~]# date +%F
2019-03-23
[root@system1 ~]# date +%f
%f


1> redirects stdout to filename 
1>> appends stdout to filename
2> redirects stderr to filename
&> redirects both stderr and stdout to a filename


ls ? will show all the files with single character as name
ls ??? will show all the files with three characters as name

[root@system1 ~]# ls a[a-d]c
aac  abc  acc  adc

[root@system1 ~]# ls *[0-9]* // it will display all the files whose name contains at least 1 digit

ls test_[!9]*  // it will print all the files except test_9
if want to create a file with special character in their name then can use "\"

touch \\
touch \$
touch hello\ there
[root@system1 test]# ls
$  \  hello there
touch hello\\\ there
[root@system1 test]# ls
hello\ there


===============================

find command:
for ignoring the case 
find . -iname abc.txt

find all files in current working directory whose name is not abc.txt
find . -not -iname abc.txt

find all files with .cpp or .sh extension

find . -name "*.cpp"  -o -name "*.sh"

find file with extension as .sh and its name contain "track" word
find . -name "*.sh" -a -name "*track*"

find all the files whose name contain "abc" but extension is not .php
find . -name "*abc*" ! -name "*.php"

how to find a file in 2 paths
find / /eniq -type f -name abc.txt

how to find hidden files
find . -name ".* -type f

find a file whose permision is not 777

find . -type f ! -perm 777

find files for which stiky bit is set
find / -type f -perm /u=s

find all files in which read permission is set to user
find . -type f -perm /u=r

find all  the files owned by john
find /home -user john -type f

find all files modified in last 10 days
find . -type f -mtime 10

find all files accessed in last 10 days
find . -type f -atime 10

find all files which are modified in last 10 to 100 days (files which are modified in last 9 days should be excluded)
find . -type f -mtime +10 -mtime -100

for minutes we use word mmin amin cmin
find all files whose size is 50MB
find . -type f -size 50M

find files size between 50 to 100 MB
find . -type f -size +50M -size -100M

find empty files
find . -type f -empty
find . -type f -size 0

find file with name abc.txt and delete that files
find . -type f -name "abc.txt" -exec rm -rf {} \;

find . -type f -name "abc.txt"  | xargs ls -l {} \;

while finding if you want to search the file only upto 2 directories 
find . -maxdepth 2 -name abc.txt


Grep :
variants of grep 
egrep : extended grep for regular expression
fgrep : fixed strings
rgrep : reversed grep

find vijay word in all files recursively
grep -r "vijay" *

show all the data in file except vijay in file
grep -riv "vijay" *
r: recursively
i: ignore case
v: excluded

count the "vijay" word in file
grep -c "vijay" filename.txt

find "vijay" and "rahul" in file.txt
find -E -w "vijay|rahul" file.txt

find exact word "vijay" in file (not vijaya or avijay)
find -iw "vijay" file.txt

find just file name which contain "vijay" word
grep -l "vijay" * | sort |  uniq

find vijay , ajay word in file
grep [via]jay file.txt 
it will search for every combination of "via" followd by "jay" i. e. vjay, ijay, ajay, viajay , vijay , iajay

find 4 digit pattern in file
grep "[0-9][0-9][0-9][0-9]" file.txt

show 3 more lines after "vijay"
grep -A 3 "vijay" file.txt

show 3 lines before "vijay"
grep -B 3 "vijay" file.txt 

grep -f user.txt /etc/passwd
it will iterate through user.txt and for every word it will search the /etc/passwd file and display the matched pattern
  

