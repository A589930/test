
awk , cut , file processing , sed ,
count no of lines in file : wc -l filename
count no of words in file : wc -w filename
file containg 100 lines print 30 to 40 number of lines : cat  filename | head -40 | tail -10
ls = echo *  // both are same
for displaying lines from 3 to 7 : sed -n '3,7p' filename
display entire file except lines from 3 to 7 : sed '3,7d' filename
string replacement :  sed 's/version/story/g' myfile.txt
string replacement by ignoring case : sed 's/version/story/gi' myfile.txt
replace multiple spaces with single space : sed 's/ */ /g' aa      // if 2 or more than 2 consecitive spaces are there then those will be repalced with single space
replacing words only within a line range (30 through 40) : sed '30,40 s/version/story/g' myfile.txt
^#  : lines starting with comment
^$   : blank lines   6'
insert 1 at the start of every line : sed -i 's/^/1/' filename
insert  at the last fo every line :  sed -i 's/$/6/' filename
remove cntl+M character from file : sed -i 's/^M//g' filename
perform 2 or more substitution at once : sed -i 's/that/this/gi;s/line1/line2/gi' myfile.txt
cut -d" " -f 2 filename // for displaying 2nd column seperated by space
print lines starting with "vi"  :  awk '/^vi/{print}' filename
print lines endng with "kar:  awk '/kar$/{print}' filename    ( cat h | grep "re$")
print lines containing 0 to 9 numbers :  awk '/[0-9]/{print}' filename
mtime : ls -l : show the last update to file content, it does not udpate with change in permission or owner
atime : ls -lu : shows the last file accessed time 
ctime : ls -lc : it changes when u change the files ownership or access permission .

ls is eqivalent to echo *
create a file with some content with the help of cat command.
cat > hello
enter the content followd by CTRL + D

[root@system1 ~]# date -u
Sat Mar 23 17:39:05 UTC 2019
[root@system1 ~]# date -s "Sat Mar 23 23:08:08"
Sat Mar 23 23:08:08 IST 2019
[root@system1 ~]#  date +"%T"
23:10:46
[root@system1 ~]# date +%B
March
[root@system1 ~]# date +%d
23
[root@system1 ~]# date +%D
03/23/19
[root@system1 ~]# date +%b
Mar
[root@system1 ~]# date +%y
19
[root@system1 ~]# date +%Y
2019
[root@system1 ~]# date +%F
2019-03-23
[root@system1 ~]# date +%f
%f


1> redirects stdout to filename 
1>> appends stdout to filename
2> redirects stderr to filename
&> redirects both stderr and stdout to a filename


ls ? will show all the files with single character as name
ls ??? will show all the files with three characters as name

[root@system1 ~]# ls a[a-d]c
aac  abc  acc  adc

[root@system1 ~]# ls *[0-9]* // it will display all the files whose name contains at least 1 digit

ls test_[!9]*  // it will print all the files except test_9
if want to create a file with special character in their name then can use "\"

touch \\
touch \$
touch hello\ there
[root@system1 test]# ls
$  \  hello there
touch hello\\\ there
[root@system1 test]# ls
hello\ there


